.form {
  &__group:not(:last-child) {
    margin-bottom: 2rem;
  }

  &__input {
    font-size: 1.5rem;
    // form input el will not defaultly inherit font-family
    font-family: inherit;
    color: inherit;
    padding: 1.5rem 2rem;
    border-radius: 2px;
    background-color: rgba($color-white, 0.5);
    border: none;
    // otherwise when focused, seems like displaced
    border-bottom: 3px solid transparent;
    width: 90%;
    display: block;
    transition: all 0.3s;

    @include respond(tab-port) {
      width: 100%;
    }

    // to remove the browser default outline when focused
    &:focus {
      outline: none;
      box-shadow: 0 1rem 2rem rgba($color-black, 0.1);
      border-bottom: 3px solid $color-primary;
    }

    &:focus:invalid {
      border-bottom: 3px solid $color-secondary-dark;
    }

    // To make the input place holder light
    &::-webkit-input-placeholder {
      color: $color-grey-dark-2;
    }
  }

  &__label {
    font-size: 1.2rem;
    font-weight: 700;
    margin-left: 2rem;
    margin-top: 0.7rem;
    //otherwise we cant give the box-model properties margin,..
    display: block;
    transition: all 0.3s;
  }

  //when placeholder is shown on input el, we want to style
  //the label.
  //we cant select like this -  &__input:placeholder-shown  &__label
  //cz label is not the child of input.
  // + is the adjacent sibling selector in css. Adjacent
  //sibling is the sibling that comes immediately after the
  //el we selected(input).
  // ~ is the general sibling selector.
  //For sibling selector, the sibling we have to select
  //(label) always has to be after the 1st el(input). Otherwise there is
  //no way to select a sibling in css.
  &__input:placeholder-shown + &__label {
    //when opacity 0, el will be still on the page. If we set visibility
    //hidden, then the el is gone.
    //Though we given opacity coz otherwise we cant animate the visibility.
    opacity: 0;
    visibility: hidden;
    transform: translateY(-4rem);
  }

  &__radio-group {
    width: 49%;
    display: inline-block;

    @include respond(tab-port) {
      width: 100%;
      margin-bottom: 2rem;
    }
  }

  &__radio-input {
    display: none;
  }

  &__radio-label {
    font-size: $default-font-size;
    cursor: pointer;
    position: relative;
    padding-left: 4rem;
  }

  &__radio-button {
    display: inline-block;
    position: absolute;
    left: 0;
    top: -0.5rem;
    height: 3rem;
    width: 3rem;
    border-radius: 50%;
    border: 5px solid $color-primary;

    &::after {
      content: '';
      display: block;
      width: 1.3rem;
      height: 1.3rem;
      border-radius: 50%;
      background-color: $color-primary;
      //Here the parent is in absolute pos, thats
      //not a prob, it only needed to be specified.
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      opacity: 0;
      transition: opacity 0.2s;
    }
  }

  //As soon as we hit the label el the real(hidden) radio button get checked,
  //we have this :checked psuedo class available to us. And then we selected
  //the sibling of that one(label) and then its child(child's psuedo selector),
  //coz thats the one we want to change when each time the radio input is selected.
  &__radio-input:checked ~ &__radio-label &__radio-button::after {
    opacity: 1;
  }
}
